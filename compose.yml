services:
  ui:
    build: ./ui
    environment:
      API_URL: http://api:8080
    ports:
      - "3000:3000"

  api:
    build: ./api
    environment:
      SPRING_APPLICATION_JSON: '{
        "spring.datasource.url": "jdbc:postgresql://database:5432/app-db",
        "spring.datasource.username": "app-db",
        "spring.datasource.password": "app-db",
        "spring.jpa.properties.hibernate.search.backend.hosts": "elasticsearch:9200",
        "spring.jpa.properties.hibernate.search.backend.protocol": "http"
        }'
    ports:
      - "8080:8080"
    depends_on:
      elasticsearch:
        condition: service_healthy
        restart: true
      database:
        condition: service_healthy
        restart: true

  database:
    image: postgres:16
    environment:
      POSTGRES_DB: app-db
      POSTGRES_USER: app-db
      POSTGRES_PASSWORD: app-db
    expose:
      - 5432
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d app-db -U app-db"]
      interval: 30s
      timeout: 10s
      retries: 50

  elasticsearch:
    image: elasticsearch:8.13.4
    environment:
      xpack.security.enabled: false
      discovery.type: single-node
    expose:
      - 9200
    ports:
      - "9200:9200"
    healthcheck:
      test: curl -s http://elasticsearch:9200 >/dev/null || exit 1
      interval: 30s
      timeout: 10s
      retries: 50